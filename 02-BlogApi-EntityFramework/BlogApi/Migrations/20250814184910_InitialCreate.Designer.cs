// <auto-generated />
using System;
using BlogApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BlogApi.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20250814184910_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogApi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("AUTHOR_EMAIL");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("AUTHOR_NAME");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_APPROVED");

                    b.Property<int>("PostId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("POST_ID");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_COMMENTS_CREATED_AT");

                    b.HasIndex("IsApproved")
                        .HasDatabaseName("IX_COMMENTS_IS_APPROVED");

                    b.HasIndex("PostId")
                        .HasDatabaseName("IX_COMMENTS_POST_ID");

                    b.ToTable("COMMENTS", (string)null);
                });

            modelBuilder.Entity("BlogApi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("AUTHOR");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_PUBLISHED");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("PUBLISHED_AT");

                    b.Property<string>("Summary")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("SUMMARY");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("TAGS");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_POSTS_CREATED_AT");

                    b.HasIndex("IsPublished")
                        .HasDatabaseName("IX_POSTS_IS_PUBLISHED");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_POSTS_TITLE");

                    b.ToTable("POSTS", (string)null);
                });

            modelBuilder.Entity("BlogApi.Models.Comment", b =>
                {
                    b.HasOne("BlogApi.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_COMMENTS_POST_ID");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BlogApi.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
